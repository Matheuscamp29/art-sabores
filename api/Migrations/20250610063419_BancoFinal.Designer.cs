// <auto-generated />
using System;
using Art_Sabores.DAO;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Art_Sabores.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250610063419_BancoFinal")]
    partial class BancoFinal
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Art_Sabores.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Art_Sabores.Models.Fornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Fornecedores");
                });

            modelBuilder.Entity("Art_Sabores.Models.ItemMateriaPrima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdMateriaPrima")
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int?>("materiaPrimaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdPedido");

                    b.HasIndex("materiaPrimaId");

                    b.ToTable("ItemsMateriaPrima");
                });

            modelBuilder.Entity("Art_Sabores.Models.ItemSalgado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int>("IdSalgado")
                        .HasColumnType("int");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int");

                    b.Property<int?>("pedidoClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("salgadoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("pedidoClienteId");

                    b.HasIndex("salgadoId");

                    b.ToTable("ItemSalgados");
                });

            modelBuilder.Entity("Art_Sabores.Models.MateriaPrima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estoque")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MateriaPrimas");
                });

            modelBuilder.Entity("Art_Sabores.Models.NotaFiscalCliente", b =>
                {
                    b.Property<string>("NFE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdCliente")
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<int?>("clienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("pedidoClienteId")
                        .HasColumnType("int");

                    b.HasKey("NFE");

                    b.HasIndex("clienteId");

                    b.HasIndex("pedidoClienteId");

                    b.ToTable("Vendas_Clientes_Receita");
                });

            modelBuilder.Entity("Art_Sabores.Models.NotaFiscalFornecedor", b =>
                {
                    b.Property<string>("NFE")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("IdFornecedor")
                        .HasColumnType("int");

                    b.Property<int>("IdPedido")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateTime")
                        .HasColumnType("datetime2");

                    b.Property<int?>("fornecedorId")
                        .HasColumnType("int");

                    b.Property<int?>("pedidoFornecedorId")
                        .HasColumnType("int");

                    b.HasKey("NFE");

                    b.HasIndex("fornecedorId");

                    b.HasIndex("pedidoFornecedorId");

                    b.ToTable("Vendas_Fornecedores_MateriaPrima");
                });

            modelBuilder.Entity("Art_Sabores.Models.PedidoCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("PedidosCliente");
                });

            modelBuilder.Entity("Art_Sabores.Models.PedidoFornecedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("PedidoFornecedores");
                });

            modelBuilder.Entity("Art_Sabores.Models.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("FlagConstante")
                        .HasColumnType("bit");

                    b.Property<int>("IdMateriaPrima")
                        .HasColumnType("int");

                    b.Property<int>("IdSalgado")
                        .HasColumnType("int");

                    b.Property<int>("QuantidadeMatPrim")
                        .HasColumnType("int");

                    b.Property<int>("Rendimento")
                        .HasColumnType("int");

                    b.Property<int?>("materiaPrimaId")
                        .HasColumnType("int");

                    b.Property<int?>("salgadoId")
                        .HasColumnType("int");

                    b.Property<string>("unidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("materiaPrimaId");

                    b.HasIndex("salgadoId");

                    b.ToTable("Receitas");
                });

            modelBuilder.Entity("Art_Sabores.Models.Salgado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estoque")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Salgados");
                });

            modelBuilder.Entity("Art_Sabores.Models.ItemMateriaPrima", b =>
                {
                    b.HasOne("Art_Sabores.Models.PedidoFornecedor", "PedidoFornecedor")
                        .WithMany()
                        .HasForeignKey("IdPedido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Art_Sabores.Models.MateriaPrima", "materiaPrima")
                        .WithMany()
                        .HasForeignKey("materiaPrimaId");

                    b.Navigation("PedidoFornecedor");

                    b.Navigation("materiaPrima");
                });

            modelBuilder.Entity("Art_Sabores.Models.ItemSalgado", b =>
                {
                    b.HasOne("Art_Sabores.Models.PedidoCliente", "pedidoCliente")
                        .WithMany()
                        .HasForeignKey("pedidoClienteId");

                    b.HasOne("Art_Sabores.Models.Salgado", "salgado")
                        .WithMany()
                        .HasForeignKey("salgadoId");

                    b.Navigation("pedidoCliente");

                    b.Navigation("salgado");
                });

            modelBuilder.Entity("Art_Sabores.Models.NotaFiscalCliente", b =>
                {
                    b.HasOne("Art_Sabores.Models.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("clienteId");

                    b.HasOne("Art_Sabores.Models.PedidoCliente", "pedidoCliente")
                        .WithMany()
                        .HasForeignKey("pedidoClienteId");

                    b.Navigation("cliente");

                    b.Navigation("pedidoCliente");
                });

            modelBuilder.Entity("Art_Sabores.Models.NotaFiscalFornecedor", b =>
                {
                    b.HasOne("Art_Sabores.Models.Fornecedor", "fornecedor")
                        .WithMany()
                        .HasForeignKey("fornecedorId");

                    b.HasOne("Art_Sabores.Models.PedidoFornecedor", "pedidoFornecedor")
                        .WithMany()
                        .HasForeignKey("pedidoFornecedorId");

                    b.Navigation("fornecedor");

                    b.Navigation("pedidoFornecedor");
                });

            modelBuilder.Entity("Art_Sabores.Models.Receita", b =>
                {
                    b.HasOne("Art_Sabores.Models.MateriaPrima", "materiaPrima")
                        .WithMany()
                        .HasForeignKey("materiaPrimaId");

                    b.HasOne("Art_Sabores.Models.Salgado", "salgado")
                        .WithMany()
                        .HasForeignKey("salgadoId");

                    b.Navigation("materiaPrima");

                    b.Navigation("salgado");
                });
#pragma warning restore 612, 618
        }
    }
}
